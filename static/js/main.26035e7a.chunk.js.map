{"version":3,"sources":["api.ts","App.styles.ts","components/PostItem.styles.ts","assets/empty-avatar.png","components/PostItem.tsx","components/Input.styles.ts","components/SearchInput.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["a","axios","then","r","data","catch","error","Promise","reject","GlobalStyle","createGlobalStyle","Title","styled","h2","Wrapper","div","Img","img","Post","PostItem","props","post","src","avatar","alt","username","name","body","Input","input","SearchInput","searchValue","setSearchValue","type","value","placeholder","onChange","e","target","App","useState","posts","setPosts","users","setUsers","filteredPosts","setFilteredPosts","useEffect","getPosts","getUsers","filter","p","toLowerCase","includes","postsList","map","user","userId","i","length","id","getUserById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAeO,sBAAAA,EAAA,4DACY,6CADZ,SAGSC,IAFG,8CAGZC,MAAK,SAAAC,GACJ,OAAOA,EAAEC,QAEVC,OAAM,SAAAC,GACL,OAAOC,QAAQC,OAAOF,MARvB,oF,kEAYE,sBAAAN,EAAA,4DACY,6CADZ,SAGQC,IAFI,8CAGdC,MAAK,SAAAC,GACJ,OAAOA,EAAEC,QAEVC,OAAM,SAAAC,GACL,OAAOC,QAAQC,OAAOF,MARrB,oF,sDCzBIG,EAAcC,YAAH,6LAeXC,EAAQC,IAAOC,GAAV,4EAKLC,EAAUF,IAAOG,IAAV,qPCpBPD,EAAUF,IAAOG,IAAV,yKAUPC,EAAMJ,IAAOK,IAAV,uEAKHC,EAAON,IAAOG,IAAV,qMCjBF,MAA0B,yC,OCS1B,SAASI,EAASC,GAAc,IACpCC,EAAQD,EAARC,KACP,OACI,eAAC,EAAD,WACI,cAACL,EAAD,CAAKM,IAAKC,EAAQC,IAAI,KACtB,eAACN,EAAD,WACI,+BAAKG,EAAKI,SAAS,qCAAQJ,EAAKK,WAChC,4BAAIL,EAAKM,aCdlB,IAAMC,EAAQhB,IAAOiB,MAAV,oHCOH,SAASC,EAAYV,GAAc,IACvCW,EAA+BX,EAA/BW,YAAaC,EAAkBZ,EAAlBY,eAGpB,OACI,cAACJ,EAAD,CAAOK,KAAK,OAAOC,MAAOH,EAAaI,YAAY,SAASC,SAAU,SAACC,GAAD,OAAyCL,EAAeK,EAAEC,OAAOJ,UC0ChIK,MAlDf,WAAgB,IAAD,EACaC,mBAAkB,IAD/B,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAkB,IAF/B,mBAENG,EAFM,KAECC,EAFD,OAGyBJ,mBAAS,IAHlC,mBAGNT,EAHM,KAGOC,EAHP,OAI6BQ,mBAAkB,IAJ/C,mBAINK,EAJM,KAISC,EAJT,KAObC,qBAAU,YPEL,WAAP,gCODIC,GACG9C,MAAK,SAAAuC,GACJC,EAASD,MPWR,WAAP,+BOTEQ,GACG/C,MAAK,SAAAyC,GAAK,OAAIC,EAASD,QACzB,IAIHI,qBAAU,WACRD,EACEL,EAAMS,QAAO,SAAAC,GAAC,OAAIA,EAAExB,KAAKyB,cAAcC,SAAStB,SAEjD,CAACA,EAAaU,IAEjB,IAAMa,EAAYT,EAAcU,KAAI,SAAClC,GACnC,IAAImC,EPQC,SAAqBb,EAAec,GACzC,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAMgB,OAAQD,IAC/B,GAAGf,EAAMe,GAAGE,KAAOH,EACjB,OAAOd,EAAMe,GOXPG,CAAYlB,EAAOtB,EAAKoC,QAEnC,OAAOD,EAAI,2BAAQnC,GAASmC,GAAQ,QAGtC,OACE,qCACA,cAAC/C,EAAD,IACE,eAACK,EAAD,WACE,cAACH,EAAD,oBACA,cAACmB,EAAD,CAAaC,YAAaA,EAAaC,eAAkBA,IACzD,mCAEIsB,EAAUC,KAAI,SAAAlC,GACZ,OAAOA,GAAQ,cAACF,EAAD,CAAUE,KAAMA,gBC/B9ByC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB9D,MAAK,YAAkD,IAA/C+D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.26035e7a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport interface IUser {\r\n  id:number\r\n  name:string\r\n  username:string\r\n}\r\n\r\nexport interface IPost {\r\n  id:number\r\n  userId:number\r\n  title: string\r\n  body:string\r\n}\r\n\r\nexport async function getPosts():Promise<IPost[]> {\r\n  const endPoint = 'https://jsonplaceholder.typicode.com/posts';\r\n  \r\n   return await axios(endPoint)\r\n      .then(r =>{\r\n        return r.data; \r\n      })\r\n      .catch(error => {\r\n        return Promise.reject(error)\r\n      });\r\n  }\r\n\r\n  export async function getUsers() {\r\n    const endPoint = 'https://jsonplaceholder.typicode.com/users';\r\n\r\n    return await axios(endPoint)\r\n      .then(r =>{\r\n        return r.data;\r\n      })\r\n      .catch(error => {\r\n        return Promise.reject(error)\r\n      });\r\n  }\r\n\r\n  export function getUserById(users:IUser[], userId:number):IUser|undefined{\r\n    for (let i = 0; i < users.length; i++) {\r\n       if(users[i].id === userId){\r\n         return users[i];\r\n       }\r\n      \r\n    }\r\n    return undefined;\r\n    \r\n }","import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    html {\r\n        height: 100%;\r\n    }\r\n\r\n    body {\r\n        margin:0;\r\n        background:#f4f4f4;\r\n    }\r\n\r\n    * {\r\n        box-sizing:border-box;\r\n    }\r\n`\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 1.8rem;\r\n    text-align:center;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    margin: 50px auto;\r\n    width: 80%;\r\n    border-radius:5px;\r\n    border:2px solid #d8e2f0;\r\n    background:#ffffff;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        margin: 0 auto;\r\n        width: 95%;\r\n }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    display:flex;\r\n    padding: 10px;\r\n    border-bottom: 2px solid #d8e2f0;;\r\n    \r\n    &::last-child{\r\n        border-bottom:none;\r\n    }\r\n`\r\n\r\nexport const Img = styled.img`\r\n    height:75px;\r\n    border-radius: 50%;\r\n`\r\n\r\nexport const Post = styled.div`\r\n    margin-left:10px;\r\n\r\n    h5{\r\n        margin:0;\r\n    }   \r\n\r\n    span{\r\n        color:#7d88b2;\r\n        font-size:.8rem;\r\n    }\r\n\r\n    p{\r\n        margin:0;\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/empty-avatar.f070c5e5.png\";","import React from 'react'\r\nimport { IPost, IUser } from '../api';\r\nimport { Img, Post, Wrapper } from './PostItem.styles';\r\nimport avatar from './../assets/empty-avatar.png';\r\n\r\ntype props = {\r\n        post:IPost & IUser\r\n      }\r\n\r\nexport default function PostItem(props:props) {\r\n    const {post} = props;\r\n    return (\r\n        <Wrapper>\r\n            <Img src={avatar} alt=\"\" />\r\n            <Post>\r\n                <h5>{post.username}<span>@{post.name}</span></h5>\r\n                <p>{post.body}</p>\r\n            </Post>\r\n        </Wrapper>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  margin: 10px;\r\n  font-size: 17px;\r\n  border-radius:5px;\r\n  border:2px solid #d8e2f0;\r\n`","import React, { Dispatch, SetStateAction } from 'react'\r\nimport { Input } from './Input.styles';\r\n\r\n\r\ntype  props = {\r\n    searchValue: string,\r\n    setSearchValue:Dispatch<SetStateAction<string>>\r\n}\r\n\r\nexport default function SearchInput(props:props) {\r\n    const {searchValue, setSearchValue} = props;\r\n\r\n\r\n    return (\r\n        <Input type=\"text\" value={searchValue} placeholder=\"Search\" onChange={(e:React.ChangeEvent<HTMLInputElement>)=>setSearchValue(e.target.value)}  />\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport { getPosts, getUserById, getUsers, IPost, IUser } from './api';\nimport { GlobalStyle, Title, Wrapper } from './App.styles';\nimport PostItem from './components/PostItem';\nimport SearchInput from './components/SearchInput';\n\nfunction App() {\n  const [posts, setPosts] = useState<IPost[]>([]);\n  const [users, setUsers] = useState<IUser[]>([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [filteredPosts, setFilteredPosts] = useState<IPost[]>([]);\n\n\n  useEffect(() => {\n    getPosts()\n      .then(posts => {\n        setPosts(posts)\n      })\n    getUsers()\n      .then(users => setUsers(users))\n  }, [])\n\n\n  \n  useEffect(() => {\n    setFilteredPosts(\n      posts.filter(p => p.body.toLowerCase().includes(searchValue))    \n    )\n  }, [searchValue, posts])\n  \n  const postsList = filteredPosts.map((post:IPost) =>{\n    let user = getUserById(users, post.userId);\n\n    return user ? { ...post, ...user} : null;\n})\n\n  return (\n    <>\n    <GlobalStyle />\n      <Wrapper>\n        <Title>Posts</Title>\n        <SearchInput searchValue={searchValue} setSearchValue = {setSearchValue} />\n        <>\n          {\n            postsList.map(post => {\n              return post && <PostItem post={post} />\n              }\n            )\n          }\n        </>\n      \n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}